
name: PHP QA

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  php:
    runs-on: ubuntu-latest
    continue-on-error: false
    strategy:
      fail-fast: false
      matrix:
        php-version: ['7.4', '8.0', '8.1', '8.2']
        project: [
          'Aws',
          'Context/Swoole',
          'Instrumentation/HttpAsyncClient',
          'Instrumentation/Slim',
          'Instrumentation/Psr3',
          'Instrumentation/Psr15',
          'Instrumentation/Psr18',
          'Instrumentation/IO',
          'Instrumentation/PDO',
          'Instrumentation/Symfony',
          'Instrumentation/Laravel',
          'Instrumentation/MongoDB',
          'Instrumentation/CodeIgniter',
          'Instrumentation/Yii',
          'Logs/Monolog',
          'Propagation/TraceResponse',
          'ResourceDetectors/Container',
          'Shims/OpenTracing',
          'Symfony'
        ]
        exclude:
          - project: 'Instrumentation/HttpAsyncClient'
            php-version: 7.4
          - project: 'Instrumentation/Slim'
            php-version: 7.4
          - project: 'Instrumentation/Psr3'
            php-version: 7.4
          - project: 'Instrumentation/Psr15'
            php-version: 7.4
          - project: 'Instrumentation/Psr18'
            php-version: 7.4
          - project: 'Instrumentation/IO'
            php-version: 7.4
          - project: 'Instrumentation/Symfony'
            php-version: 7.4
          - project: 'Instrumentation/Laravel'
            php-version: 7.4
          - project: 'Instrumentation/CodeIgniter'
            php-version: 7.4
          - project: 'Instrumentation/Yii'
            php-version: 7.4
          - project: 'Instrumentation/IO'
            php-version: 8.0
          - project: 'Instrumentation/IO'
            php-version: 8.1
          - project: 'Instrumentation/PDO'
            php-version: 7.4
          - project: 'Instrumentation/PDO'
            php-version: 8.0
          - project: 'Instrumentation/PDO'
            php-version: 8.1
    steps:
    - uses: actions/checkout@v3

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php-version }}
        coverage: xdebug
        extensions: ast, grpc, opentelemetry

    - name: Validate composer.json and composer.lock
      run: composer validate

    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v3
      with:
        path: src/${{ matrix.project }}/vendor
        key: ${{ runner.os }}-${{ matrix.php-version }}-php-${{ hashFiles('**/composer.json') }}
        restore-keys: |
          ${{ runner.os }}-${{ matrix.php-version }}-php-

    - name: Install dependencies
      if: steps.composer-cache.outputs.cache-hit != 'true'
      working-directory: src/${{ matrix.project }}
      run: |
        composer config --no-plugins allow-plugins.php-http/discovery false
        composer install --prefer-dist --no-progress --no-suggest

    - name: Validate Packages composer.json
      working-directory: src/${{ matrix.project }}
      run: composer validate

    - name: Check Style
      working-directory: src/${{ matrix.project }}
      continue-on-error: ${{ matrix.php-version == 8.2 }} #temporary, until php-cs-fixer is happy with php8.2
      run: vendor/bin/php-cs-fixer fix --config=.php-cs-fixer.php -v --dry-run --stop-on-violation --using-cache=no -vvv

    - name: Run Phan
      working-directory: src/${{ matrix.project }}
      env:
        PHAN_DISABLE_XDEBUG_WARN: 1
      run: vendor/bin/phan

    - name: Run Psalm
      working-directory: src/${{ matrix.project }}
      run: vendor/bin/psalm --output-format=github --php-version=${{ matrix.php-version }}

    - name: Run Phpstan
      working-directory: src/${{ matrix.project }}
      run: vendor/bin/phpstan analyse --error-format=github

    - name: Start MongoDB
      uses: supercharge/mongodb-github-action@1.8.0
      if: ${{ matrix.project == 'Instrumentation/MongoDB' }}
      with:
        mongodb-version: 6.0
        mongodb-replica-set: otel-php

    - name: Run PHPUnit
      working-directory: src/${{ matrix.project }}
      run: vendor/bin/phpunit --testsuite integration --testsuite unit --coverage-text --coverage-clover=coverage.clover

    - name: Code Coverage
      working-directory: src/${{ matrix.project }}
      run: bash <(curl -s https://codecov.io/bash) -F ${{ matrix.php-version }}

